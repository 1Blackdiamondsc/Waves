waves.network.traffic-logger {
  ignore-tx-messages = []
}

generator {
  chain-id = D
  accounts = [
    "FfPr7UvxLRaDDY37nU1Hj9hCswSG6yg1cXw5ooYcVyg5",
    "EhUBgtJUjLd9A9UU3ZJJcqd82S9EK4XdcwaXH92b5ew3",
    "6x2nCGud2hbCjgoSKKnv7YTBHyT1NoAHuBA2AncnP8aU",
    "FK2xSTk4jccoNmzcPo2kzGioQaNYuX5VupX4eSGeoa3t"
  ]

  send-to = [
    {
      network-address = "zzz.zzz.zzz.zzz:6865"
      api-address = "http://zzz.zzz.zzz.zzz:6869"
    },
    {
      network-address = "xx.xx.xx.xx:6865"
      api-address = "http://xx.xx.xx.xx:6869"
    },

  ]

  worker {
    utx-limit = 1000
    delay = 5s
    # tail-initial-delay = empty-utx # 'empty-utx' or duration. Delay before tail initial phase, if 'empty-utx' - waits until utx will be empty
    # initial-delay = empty-utx # 'empty-utx' or duration. Delay after initial phase, if 'empty-utx' - waits until utx will be empty
    working-time = 1h

    auto-reconnect = true
    reconnect-delay = 3s
    # warm up strategy
    warm-up {
      start = 100 # first batch size
      step = 300 # step of batch increasing
      # duration = 30s # max warm up duration
      # end = 1000 # max batch size, if not set = utx-limit. Makes sense to use with warm-up.once = true
      # once = true # end warm up after reaching warm-up.end batch size. Makes sense to use with warm-up.end
    }

    # initial-warm-up {
    #   start = 100
    #   end = 1000
    #   step = 300
    #   once = true
    # }
  }

  mode = "NARROW"
  narrow {
    transactions = 10
    probabilities {
      include "probabilities.conf"
    }

    include "scripts.conf"
    include "set-script.conf"
  }

  wide {
    transactions = 10
    limit-dest-accounts = 10000
    min-fee = 100000
    max-fee = 150000
  }

  dyn-wide {
    limit-dest-accounts = 10000
    start = 1
    grow-adder = 0.0408
    min-fee = 100000
    max-fee = 150000
  }

  multisig {
    transactions = 3
    first-run = false
  }

  swarm {
    scripts = 0
    complexity = false
    transfers = 0
    exchange = 10
    assets = [
      "ArhKA4Z8LJpbthtcvC9puVESDniXKScdPgpuUkkw358G",
      "afzcrnmMJLwdUpZKYk48PFcKYBwTqjc2aJmV2NdQmyS",
      "AFVC315qWRqzPzbTxD5Zs9j7TZzWMg85Lr8aWSZHLegW"
    ]
  }

  oracle {
    transactions = 300
    required-data = [
      {
        type = "boolean"
        key = "enabled#1"
        value = true
      }, {
        type = "boolean"
        key = "enabled#2"
        value = true
      }, {
        type = "boolean"
        key = "enabled#3"
        value = true
      }, {
        type = "integer"
        key = "integer#1"
        value = 1
      }, {
        type = "integer"
        key = "integer#2"
        value = 2
      }, {
        type = "integer"
        key = "integer#3"
        value = 3
      }, {
        type = "string"
        key = "String#1"
        value = "foo"
      }, {
        type = "string"
        key = "String#2"
        value = "bar"
      }, {
        type = "string"
        key = "String#3"
        value = "buz"
      }
    ]
  }
}

include "local.conf"
